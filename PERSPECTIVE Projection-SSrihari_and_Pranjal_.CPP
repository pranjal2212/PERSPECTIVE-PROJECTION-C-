#include<process.h>
#include<graphics.h>
#include<conio.h>
#include <iostream.h>
#include<dos.h>
#include <string.h>
#include <math.h>
#define PI 3.14159265
void main()
{
 int gd=DETECT,gm;
 initgraph(&gd,&gm,"c:\\turboc3\\bgi");
 float x1,y1,z1,x2,y2,z2,x3,y3,z3,x4,y4,z4,x5,y5,z5,x6,y6,z6,x7,y7,z7,x8,y8,z8;
 float x11,y11,z11,x21,y21,z21,x31,y31,z31,x41,y41,z41,x51,y51,z51,x61,y61,z61,x71,y71,z71,x81,y81,z81;

 cout<<"Enter the coordinates for vertice 1\n";
 cin>>x1>>y1>>z1;
 cout<<"Enter the coordinates for vertice 2\n";
 cin>>x2>>y2>>z2;
 cout<<"Enter the coordinates for vertice 3\n";
 cin>>x3>>y3>>z3;
 cout<<"Enter the coordinates for vertice 4\n";
 cin>>x4>>y4>>z4;
 cout<<"Enter the coordinates for vertice 5\n";
 cin>>x5>>y5>>z5;
 cout<<"Enter the coordinates for vertice 6\n";
 cin>>x6>>y6>>z6;
 cout<<"Enter the coordinates for vertice 7\n";
 cin>>x7>>y7>>z7;
 cout<<"Enter the coordinates for vertice 8\n";
 cin>>x8>>y8>>z8;
 cout<<"Enter the depth\n";
 int d;
 cin>>d;
 x11=x1;y11=y1;z11=z1;
 x21=x2;y21=y2;z21=z2;
 x31=x3;y31=y3;z31=z3;
 x41=x4;y41=y4;z41=z4;
 x51=x5;y51=y5;z51=z5;
 x61=x6;y61=y6;z61=z6;
 x71=x7;y71=y7;z71=z7;
 x81=x8;y81=y8;z81=z8;
 clrscr();
 cleardevice();
 float a[4][4],b[4],b1[4];
 a[0][0]=d/(d+z1);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z1);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z1);a[3][3]=d/(d+z1);
 b[0]=x1;b[1]=y1;b[2]=z1;b[3]=1;
 for(int i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x1=b1[0];
 y1=b1[1];
 a[0][0]=d/(d+z2);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z2);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z2);a[3][3]=d/(d+z2);
 b[0]=x2;b[1]=y2;b[2]=z2;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x2=b1[0];
 y2=b1[1];
 a[0][0]=d/(d+z3);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z3);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z3);a[3][3]=d/(d+z3);
 b[0]=x3;b[1]=y3;b[2]=z3;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x3=b1[0];
 y3=b1[1];
 a[0][0]=d/(d+z4);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z4);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z4);a[3][3]=d/(d+z4);
 b[0]=x4;b[1]=y4;b[2]=z4;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x4=b1[0];
 y4=b1[1];
 a[0][0]=d/(d+z5);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z5);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z5);a[3][3]=d/(d+z5);
 b[0]=x5;b[1]=y5;b[2]=z5;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x5=b1[0];
 y5=b1[1];
 a[0][0]=d/(d+z6);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z6);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z6);a[3][3]=d/(d+z6);
 b[0]=x6;b[1]=y6;b[2]=z6;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x6=b1[0];
 y6=b1[1];
 a[0][0]=d/(d+z7);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z7);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z7);a[3][3]=d/(d+z7);
 b[0]=x7;b[1]=y7;b[2]=z7;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x7=b1[0];
 y7=b1[1];
  a[0][0]=d/(d+z8);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z8);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z8);a[3][3]=d/(d+z8);
 b[0]=x8;b[1]=y8;b[2]=z8;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x8=b1[0];
 y8=b1[1];
// x1=x1/(1+(z1/d));
// y1=y1/(1+(z1/d));
// x2=x2/(1+(z2/d));
// y2=y2/(1+(z2/d));
// x3=x3/(1+(z3/d));
// y3=y3/(1+(z3/d));
// x4=x4/(1+(z4/d));
// y4=y4/(1+(z4/d));
// x5=x5/(1+(z5/d));
// y5=y5/(1+(z5/d));
// x6=x6/(1+(z6/d));
// y6=y6/(1+(z6/d));
// x7=x7/(1+(z7/d));
// y7=y7/(1+(z7/d));
// x8=x8/(1+(z8/d));
// y8=y8/(1+(z8/d));
/* cout<<x1<<y1<<endl;
 cout<<x2<<y2<<endl;
 cout<<x3<<y3<<endl;
 cout<<x4<<y4<<endl;
 cout<<x5<<y5<<endl;
 cout<<x6<<y6<<endl;
 cout<<x7<<y7<<endl;
 cout<<x8<<y8<<endl; */
 line(x1,y1,x2,y2);
 line(x2,y2,x3,y3);
 line(x3,y3,x4,y4);
 line(x4,y4,x1,y1);
 line(x5,y5,x6,y6);
 line(x6,y6,x7,y7);
 line(x7,y7,x8,y8);
 line(x8,y8,x5,y5);
 line(x1,y1,x5,y5);
 line(x2,y2,x6,y6);
 line(x3,y3,x7,y7);
 line(x4,y4,x8,y8);
 getch();
 clrscr();
 cleardevice();
 cout<<"Enter the coordinate from which view must change";
 int xa,ya,za;
 cin>>xa>>ya>>za;
 x1=x11-xa;
 y1=y11-ya;
 z1=z11-za;
  x2=x21-xa;
 y2=y21-ya;
 z2=z21-za;
  x3=x31-xa;
 y3=y31-ya;
 z3=z31-za;
  x4=x41-xa;
 y4=y41-ya;
 z4=z41-za;
  x5=x51-xa;
 y5=y51-ya;
 z5=z51-za;
  x6=x61-xa;
 y6=y61-ya;
 z6=z61-za;
  x7=x71-xa;
 y7=y71-ya;
 z7=z71-za;
  x8=x81-xa;
 y8=y81-ya;
 z8=z81-za;
 a[0][0]=d/(d+z1);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z1);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z1);a[3][3]=d/(d+z1);
 b[0]=x1;b[1]=y1;b[2]=z1;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x1=b1[0];
 y1=b1[1];
 a[0][0]=d/(d+z2);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z2);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z2);a[3][3]=d/(d+z2);
 b[0]=x2;b[1]=y2;b[2]=z2;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x2=b1[0];
 y2=b1[1];
 a[0][0]=d/(d+z3);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z3);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z3);a[3][3]=d/(d+z3);
 b[0]=x3;b[1]=y3;b[2]=z3;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x3=b1[0];
 y3=b1[1];
 a[0][0]=d/(d+z4);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z4);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z4);a[3][3]=d/(d+z4);
 b[0]=x4;b[1]=y4;b[2]=z4;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x4=b1[0];
 y4=b1[1];
 a[0][0]=d/(d+z5);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z5);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z5);a[3][3]=d/(d+z5);
 b[0]=x5;b[1]=y5;b[2]=z5;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x5=b1[0];
 y5=b1[1];
 a[0][0]=d/(d+z6);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z6);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z6);a[3][3]=d/(d+z6);
 b[0]=x6;b[1]=y6;b[2]=z6;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x6=b1[0];
 y6=b1[1];
 a[0][0]=d/(d+z7);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z7);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z7);a[3][3]=d/(d+z7);
 b[0]=x7;b[1]=y7;b[2]=z7;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x7=b1[0];
 y7=b1[1];
  a[0][0]=d/(d+z8);a[0][1]=0;a[0][2]=0;a[0][3]=0;
 a[1][0]=0;a[1][1]=d/(d+z8);a[1][2]=0;a[1][3]=0;
 a[2][0]=0;a[2][1]=0;a[2][2]=0;a[2][3]=0;
 a[3][0]=0;a[3][1]=0;a[3][2]=1/(d+z8);a[3][3]=d/(d+z8);
 b[0]=x8;b[1]=y8;b[2]=z8;b[3]=1;
 for(i1=0;i1<4;i1++)
 {
  b1[i1]=0;
  for(int j1=0;j1<4;j1++)
  {
    b1[i1]+=b[j1]*a[i1][j1];
  }
 }
 x8=b1[0];
 y8=b1[1];
// x1=x1/(1+(z1/d));
// y1=y1/(1+(z1/d));
// x2=x2/(1+(z2/d));
// y2=y2/(1+(z2/d));
// x3=x3/(1+(z3/d));
// y3=y3/(1+(z3/d));
// x4=x4/(1+(z4/d));
// y4=y4/(1+(z4/d));
// x5=x5/(1+(z5/d));
// y5=y5/(1+(z5/d));
// x6=x6/(1+(z6/d));
// y6=y6/(1+(z6/d));
// x7=x7/(1+(z7/d));
// y7=y7/(1+(z7/d));
// x8=x8/(1+(z8/d));
// y8=y8/(1+(z8/d));
/* cout<<x1<<y1<<endl;
 cout<<x2<<y2<<endl;
 cout<<x3<<y3<<endl;
 cout<<x4<<y4<<endl;
 cout<<x5<<y5<<endl;
 cout<<x6<<y6<<endl;
 cout<<x7<<y7<<endl;
 cout<<x8<<y8<<endl; */
 getch();
 cleardevice();
 line(x1,y1,x2,y2);
 line(x2,y2,x3,y3);
 line(x3,y3,x4,y4);
 line(x4,y4,x1,y1);
 line(x5,y5,x6,y6);
 line(x6,y6,x7,y7);
 line(x7,y7,x8,y8);
 line(x8,y8,x5,y5);
 line(x1,y1,x5,y5);
 line(x2,y2,x6,y6);
 line(x3,y3,x7,y7);
 line(x4,y4,x8,y8);
 getch();
}
